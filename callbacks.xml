<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<?xml-stylesheet type="text/xsl" href="callbacks.xsl"?>

<plugin name="simGLTF" author="federico.ferri.it@gmail.com">
    <description>Plugin for glTF format support</description>
    <command name="clear">
        <description>Clear all data stored in memory (geometry, material, animation, cache).</description>
        <params>
        </params>
        <return>
        </return>
    </command>
    <command name="loadASCII">
        <description>Load an ASCII glTF model.</description>
        <params>
            <param name="filepath" type="string" />
        </params>
        <return>
            <param name="result" type="bool">
                <description>true if success</description>
            </param>
            <param name="warnings" type="string">
                <description>warning message(s)</description>
            </param>
            <param name="errors" type="string">
                <description>error message(s)</description>
            </param>
        </return>
    </command>
    <command name="loadBinary">
        <description>Load a binary (.glb) glTF model.</description>
        <params>
            <param name="filepath" type="string" />
        </params>
        <return>
            <param name="result" type="bool">
                <description>true if success</description>
            </param>
            <param name="warnings" type="string">
                <description>warning message(s)</description>
            </param>
            <param name="errors" type="string">
                <description>error message(s)</description>
            </param>
        </return>
    </command>
    <command name="saveASCII">
        <description>Save a glTF model to an ASCII file.</description>
        <params>
            <param name="filepath" type="string" />
        </params>
        <return>
            <param name="result" type="bool">
                <description>true if success</description>
            </param>
        </return>
    </command>
    <command name="saveBinary">
        <description>Save a glTF model to a binary file.</description>
        <params>
            <param name="filepath" type="string" />
        </params>
        <return>
            <param name="result" type="bool">
                <description>true if success</description>
            </param>
        </return>
    </command>
    <command name="serialize">
        <description>Serialize glTF model to JSON string.</description>
        <params>
        </params>
        <return>
            <param name="json" type="string">
                <description>the JSON document</description>
            </param>
        </return>
    </command>
    <command name="exportShape">
        <description>Export shape to glTF model.</description>
        <params>
            <param name="shapeHandle" type="int">
                <description>handle of the shape</description>
            </param>
            <param name="parentHandle" type="int" default="-1">
                <description>handle of the parent object. if specified the matrix of the node will be relative to this. use this in conjunction with parentNodeIndex parameter.</description>
            </param>
            <param name="parentNodeIndex" type="int" default="0">
                <description>index of parent node</description>
            </param>
        </params>
        <return>
            <param name="nodeIndex" type="int">
                <description>index of the new node (may contain sub-nodes)</description>
            </param>
        </return>
    </command>
    <command name="exportObject">
        <description>Export object to glTF model.</description>
        <params>
            <param name="objectHandle" type="int">
                <description>handle of the object</description>
            </param>
        </params>
        <return>
            <param name="nodeIndex" type="int">
                <description>index of the new node (may contain sub-nodes)</description>
            </param>
        </return>
    </command>
    <command name="exportAllObjects">
        <description>Export all objects to glTF model.</description>
        <params>
        </params>
        <return>
        </return>
    </command>
    <command name="exportSelectedObjects">
        <description>Export selected objects to glTF model.</description>
        <params>
        </params>
        <return>
        </return>
    </command>
    <command name="exportObjects">
        <description>Export objects to glTF model.</description>
        <params>
            <param name="objectHandles" type="table" item-type="int">
                <description>handles of the objects</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="exportAnimation">
        <description>Export animation data to glTF model.</description>
        <params>
        </params>
        <return>
        </return>
    </command>
    <command name="animationFrameCount">
        <description>Return count of animation frames.</description>
        <params>
        </params>
        <return>
            <param name="count" type="int">
                <description>count of frames</description>
            </param>
        </return>
    </command>
    <command name="recordAnimation">
        <description>Export animation data to glTF model.</description>
        <params>
            <param name="enable" type="bool">
                <description>if true the plugin will record the pose of all objects during simulation</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="setExportTextureFormat">
        <description>Set the image format (bmp, png, jpg) in which textures are exported.</description>
        <params>
            <param name="textureFormat" type="int">
                <description>Format of exported texture images. See <enum-ref name="TextureFormat" />.</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="getExportTextureFormat">
        <description>Set the image format (bmp, png, jpg) in which textures are exported.</description>
        <params>
        </params>
        <return>
            <param name="textureFormat" type="int">
                <description>Format of exported texture images. See <enum-ref name="TextureFormat" />.</description>
            </param>
            <param name="formatName" type="string">
                <description>Format name.</description>
            </param>
        </return>
    </command>
    <enum name="TextureFormat" item-prefix="texture_format_" base="6761">
        <item name="bmp"/>
        <item name="png"/>
        <item name="jpg"/>
    </enum>
</plugin>
